name: Expo EAS Build APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set up EAS credentials
        env:
          EAS_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: echo "EAS_TOKEN set"

      - name: Trigger EAS Android Build
        id: eas_build
        env:
          EAS_TOKEN: ${{ secrets.EXPO_TOKEN  }}
        run: |
          echo "Triggering EAS Build..."
          # The --wait flag makes EAS CLI wait until the build completes.
          eas build --platform android --non-interactive --profile release --wait --json > eas_build.json
          cat eas_build.json
          # Extract the build artifact URL from the JSON output.
          BUILD_URL=$(jq -r '.artifacts.buildUrl' eas_build.json)
          if [ -z "$BUILD_URL" ]; then
            echo "No build URL found. Check your eas.json configuration and build logs."
            exit 1
          fi
          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      - name: Download APK
        run: |
          echo "Downloading APK from $BUILD_URL"
          wget "$BUILD_URL" -O build.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: expo-eas-apk
          path: build.apk
